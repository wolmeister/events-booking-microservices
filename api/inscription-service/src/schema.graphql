scalar DateTime

extend type User @key(fields: "id") {
  id: ID! @external
}

extend type Event @key(fields: "id") {
  id: ID! @external
}

type Inscription @key(fields: "id") {
  id: ID!
  user: User!
  event: Event!
  certificateCode: String
  checkintAt: DateTime
  createdAt: DateTime!
}

type Certificate @key(fields: "code") {
  code: ID!
  url: String!
}

type Query {
  inscriptions(eventId: String): [Inscription!]!
  certificate(code: String!): Certificate
}

type Mutation {
  register(eventId: ID!): Inscription!
  checkin(id: ID!): Inscription!
  cancel(eventId: ID!): ID!
  generateCertificate(eventId: ID!): Certificate
}
